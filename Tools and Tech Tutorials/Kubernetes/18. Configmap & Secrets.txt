my-configmap.yaml
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: my-config
data:
  db_host: mysql_service

---

my-secret.yaml
---
apiVersion: v1
kind: Secret
metadata:
  name: my-secret
type: Opaque
data:
  username: bXl1c2Vy
  password: bXlwYXNz

my-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: my-app
  name: my-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: my-app
  strategy: {}
  template:
    metadata:
      labels:
        app: my-app
    spec:
      containers:
      - image: busybox:1.28
        name: my-app
        command: ['sh', '-c', "printenv MYSQL_USER MYSQL_PASSWORD MYSQL_SERVER && sleep 300"]
        env:
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: my-secret
              key: username
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: my-secret
              key: password
        - name: MYSQL_SERVER
          valueFrom:
            configMapKeyRef:
              name: my-config
              key: db_host
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "200m"
            memory: "256Mi"

---

my-confiogmap-file.yaml
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config-file
data:
  mysql.conf: |
    [mysqld]
    port=3306
    socket=/tmp/mysql.sock
    key_buffer_size=16M
    max_allowed_packet=128M

---

# echo -n "myuser" | base64
# echo -n "mypassword" | base64
# base64 worker-join.sh | tr -d "\n" [copy the string]

my-secret-file.yaml
---

apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret-file
type: Opaque
data:
  secret.file: |
    IyEvYmluL2Jhc2gKc3VkbyBrdWJlYWRtIGpvaW4gMTkyLjE2OC4wLjE3NTo2NDQzIC0tdG9rZW4ga2lneGI5LmlpbDFlMzYxZDAxaHViaHAgLS1kaXNjb3ZlcnktdG9rZW4tY2EtY2VydC1oYXNoIHNoYTI1NjozYWNiNjRiZTEzNjM2NDlmYmQ0YjRhMWZjYmRkNDQ2OWRjMWFiOTczMmZjZDVhOTZiN2IxNDM4MGNmNDc0Y2RkIAo=
  
---

myapp-deployment-file.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: my-deployment
  name: my-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: my-deployment
  strategy: {}
  template:
    metadata:
      labels:
        app: my-deployment
    spec:
      containers:
      - image: nginx:1.20
        name: nginx
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "200m"
            memory: "256Mi"
status: {}

---

# k rollout restart deployment/my-db
# k rollout status deployment/my-db

deployment "my-db" successfully rolled out