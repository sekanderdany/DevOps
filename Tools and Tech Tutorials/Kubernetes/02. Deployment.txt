sudo kubectl drain worker01 --ignore-daemonsets --delete-emptydir-data
sudo kubectl drain worker02 --ignore-daemonsets --delete-emptydir-data
sudo kubectl uncordon worker01
sudo kubectl uncordon worker02

watch -n 1 'kubectl get nodes'
------------------------------

Commands:
-----------
# k get deployments.apps
# k apply -f nginx-service.yaml
# k apply -f nginx-service.yaml
# k get svc
# k describe svc nginx-service
# k get po -o wide
# k get ep


nginx-deploy.yaml
------------------

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  labels:
    app: nginx
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx
        ports:
        - containerPort: 80
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
          requests:
            memory: "64Mi"
            cpu: "250m"
---

nginx-service.yaml
---------------------

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  selector:
    app: nginx
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 80
---

#  k apply -f nginx-deploy.yaml
#  k get po

NAME                               READY   STATUS    RESTARTS   AGE
nginx-deployment-f7748cfd9-5cgwb   1/1     Running   0          38s
nginx-deployment-f7748cfd9-g8r22   1/1     Running   0          38s


#  k get deployment

NAME               READY   UP-TO-DATE   AVAILABLE   AGE
nginx-deployment   2/2     2            2           56s

#  k apply -f nginx-service.yaml
#  k get svc

NAME            TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)    AGE
kubernetes      ClusterIP   10.96.0.1       <none>        443/TCP    44h
nginx-service   ClusterIP   10.103.73.135   <none>        8080/TCP   6s

#  k describe svc nginx-service

Name:                     nginx-service
Namespace:                default
Labels:                   <none>
Annotations:              <none>
Selector:                 app=nginx
Type:                     ClusterIP
IP Family Policy:         SingleStack
IP Families:              IPv4
IP:                       10.103.73.135
IPs:                      10.103.73.135
Port:                     <unset>  8080/TCP
TargetPort:               80/TCP
Endpoints:                10.88.79.65:80,10.88.69.193:80
Session Affinity:         None
Internal Traffic Policy:  Cluster
Events:                   <none>


#  k get po -o wide

NAME                               READY   STATUS    RESTARTS   AGE   IP             NODE           NOMINATED NODE   READINESS GATES
nginx-deployment-f7748cfd9-5cgwb   1/1     Running   0          17m   10.88.69.193   k8s-worker02   <none>           <none>
nginx-deployment-f7748cfd9-g8r22   1/1     Running   0          17m   10.88.79.65    k8s-worker01   <none>           <none>

#  k get ep

NAME            ENDPOINTS                        AGE
kubernetes      192.168.0.175:6443               44h
nginx-service   10.88.69.193:80,10.88.79.65:80   94s

# k get svc nginx-service -o yaml
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"nginx-service","namespace":"default"},"spec":{"ports":[{"port":8080,"protocol":"TCP","targetPort":80}],"selector":{"app":"nginx"}}}
  creationTimestamp: "2025-03-29T20:45:46Z"
  name: nginx-service
  namespace: default
  resourceVersion: "80130"
  uid: 5eaf1e03-fd90-49be-a648-314e3ba7c137
spec:
  clusterIP: 10.103.73.135
  clusterIPs:
  - 10.103.73.135
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 80
  selector:
    app: nginx
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
---

#  k get deployments.apps nginx-deployment -o yaml

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"nginx"},"name":"nginx-deployment","namespace":"default"},"spec":{"replicas":2,"selector":{"matchLabels":{"app":"nginx"}},"template":{"metadata":{"labels":{"app":"nginx"}},"spec":{"containers":[{"image":"nginx","name":"nginx","ports":[{"containerPort":80}],"resources":{"limits":{"cpu":"500m","memory":"128Mi"},"requests":{"cpu":"250m","memory":"64Mi"}}}]}}}}
  creationTimestamp: "2025-03-29T20:29:27Z"
  generation: 1
  labels:
    app: nginx
  name: nginx-deployment
  namespace: default
  resourceVersion: "78209"
  uid: 29521c39-50a9-40af-abf4-b221eae0c8ae
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: nginx
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: nginx
    spec:
      containers:
      - image: nginx
        imagePullPolicy: Always
        name: nginx
        ports:
        - containerPort: 80
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 250m
            memory: 64Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 2
  conditions:
  - lastTransitionTime: "2025-03-29T20:30:04Z"
    lastUpdateTime: "2025-03-29T20:30:04Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2025-03-29T20:29:27Z"
    lastUpdateTime: "2025-03-29T20:30:04Z"
    message: ReplicaSet "nginx-deployment-f7748cfd9" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 1
  readyReplicas: 2
  replicas: 2
  updatedReplicas: 2
---