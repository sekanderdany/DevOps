# k create sa jenkins --dry-run=client -o yaml > jenkins-sa.yaml

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jenkins

---

# k apply -f jenkins-sa.yaml

# k describe sa jenkins
Name:                jenkins
Namespace:           default
Labels:              <none>
Annotations:         <none>
Image pull secrets:  <none>
Mountable secrets:   <none>
Tokens:              <none>
Events:              <none>


# vi jenkins-secret-token.yaml 
apiVersion: v1
kind: Secret
metadata:
  name: jenkins-sa-token
  annotations:
    kubernetes.io/service-account.name: jenkins

# k apply -f jenkins-secret-token.yaml

# k get secrets jenkins-sa-token -o yaml

---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJU2h4SkllQnltTHN3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBek1qZ3dNRE16TWpWYUZ3MHpOVEF6TWpZd01ETTRNalZhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUNuY0Y1MythTnZPYUdNUHVkTzJYRE5QV0FkdEJWY0RKdGovMmJLdjhJZndGZlBDb1BnazREcXAzbGYKa2d0RDFQcFUvUEZmTDFJOTIxVGxWVEdyemdMRFZ4UzZsVkxmbFRDcFVEdTcrb0hhUTZtNzNUS3RuT0JHVDNGQQpJdHNqd25sKzhFUnlsYVdHMFE5KzlaY2RMbnJMenRZai9yVWlTNTRsR3QxcDR0M2RXM28xL3lrUFFTRHpHWS8yCjdEZmMvbmJIdzhUSklRNnF3YWdheUQvTUorUi9LL0VwSzFqWURKMzF2OTdPZkNSUEQ4L25qcm9NVkxtQzE5VnIKeXl5VEFFZ0s5eVYybnlNVVZuQlpKc2VlcDA1Mm9pWUJ3cUt5enptQVhMSzY3TFdNQjlIWXRqL09EWFU0eFIzLwo5SmVCaFU3REZnOFRaVm9OblZaMUUxVWZmZGk3QWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJUNHpPM0tSdE1XbVd0TDk3VUNJaTE3Q3FUVXlUQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ2prWUpTbUdXNQpPRGtWMXF6b0dhQnV6dEFWbndKdEVxWDl2VUJhTkNkNHFKamZGVkV4OG9ObzlFR0RLbXVsZUxNSklsdXE5TzN1CllaUnZXWGgxc0VnZGNYbVAwWkpwMjdoZXlabTc2SGxoenhpZU1RdTkzNWdrQkJiNEphamVubnI5OVVZdTZIWEoKS2ZoOE1vS2wvSi9zblQ1RGR3YW9SSklmLzVnekpLTGdodzNvQmVYQ21TcGlLYklMOGd2VkZUZTgzNm0vWklzcQpXaHd1M05RK2VGbTMvOVBkRzByS3N2MkVBQ1hYdStyZUYxYm1TT3JKQXhCckVORU5UMVd2TXpYM0QyWDZhcUJPCkt4OVZ2cFZyWllpVGZ1eHRwOWNUN0ZoSmdPUkxjaXBxYzlKTHBHbzVqVnNsbDcwaElPZ3lSU3M1WEJnVDFVTmsKbjk0WG1oeVlLd2tKCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K        
  namespace: ZGVmYXVsdA==
  token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklsUm5OR010ZVhoMmNGZEdaVWhwV0d0QmNEVnpkRGxMYld0VWR6bDVjVU0xTjFRd1FXOUtYM0ZyVFVVaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUprWldaaGRXeDBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5elpXTnlaWFF1Ym1GdFpTSTZJbXBsYm10cGJuTXRjMkV0ZEc5clpXNGlMQ0pyZFdKbGNtNWxkR1Z6TG1sdkwzTmxjblpwWTJWaFkyTnZkVzUwTDNObGNuWnBZMlV0WVdOamIzVnVkQzV1WVcxbElqb2lhbVZ1YTJsdWN5SXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWeWRtbGpaUzFoWTJOdmRXNTBMblZwWkNJNklqVXlNV0k0TXpjNUxXRm1ZelV0TkdRME1DMWlOemt3TFdZM1ltVmlZVEUyWWpRM1l5SXNJbk4xWWlJNkluTjVjM1JsYlRwelpYSjJhV05sWVdOamIzVnVkRHBrWldaaGRXeDBPbXBsYm10cGJuTWlmUS5Wd25XeUcxYm1YdFdVTkNiYmMtN1F1d0ZkeGhjWEplRklDakhyRzZhbloyUXN4SHhNWHF5ZjlKU29wRkdWLXVDMzZUcnZKUEVDdHdhdy1EYWNIMFBaTUpmbF9VOWViY2ptTF9YbVlIMmpKbk9aWHk4RWFlOC1jeDA3blQtSngyYmpXY2FOTkZJVGNoYU9Jb0pZR256eS1ELVhiaTZxaEJDaEdRNG43aUktWWhHR1ZIYU5XTVVUNzU2TTZRTmtyVmV0RldkY0hyUkVLaVFheEh6MFhoV3laS3VQakl2SWV5VTN2MTBqcU10WUZlYW1VbHVhNUM1b05SdkJod2cwR0VGV082aTkwU1hLRDVUYWhXWmpJVS14eWItS0VGQ25uZ0pvb1YtZF83N1BSMnp6dUVlanJEdzVkc1p1cXpENVMxTXppWkJNdDlDNFJ4UElFcXRjbXNDR0E=
kind: Secret
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"Secret","metadata":{"annotations":{"kubernetes.io/service-account.name":"jenkins"},"name":"jenkins-sa-token","namespace":"default"},"type":"kubernetes.io/service-account-token"}
    kubernetes.io/service-account.name: jenkins
    kubernetes.io/service-account.uid: 521b8379-afc5-4d40-b790-f7beba16b47c        
  creationTimestamp: "2025-04-26T08:42:44Z"
  name: jenkins-sa-token
  namespace: default
  resourceVersion: "323837"
  uid: f0c97fde-e1db-4edf-bc11-bfa7828a2ab7
type: kubernetes.io/service-account-token

---

# echo ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklsUm5OR010ZVhoMmNGZEdaVWhwV0d0QmNEVnpkRGxMYld0VWR6bDVjVU0xTjFRd1FXOUtYM0ZyVFVVaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUprWldaaGRXeDBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5elpXTnlaWFF1Ym1GdFpTSTZJbXBsYm10cGJuTXRjMkV0ZEc5clpXNGlMQ0pyZFdKbGNtNWxkR1Z6TG1sdkwzTmxjblpwWTJWaFkyTnZkVzUwTDNObGNuWnBZMlV0WVdOamIzVnVkQzV1WVcxbElqb2lhbVZ1YTJsdWN5SXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWeWRtbGpaUzFoWTJOdmRXNTBMblZwWkNJNklqVXlNV0k0TXpjNUxXRm1ZelV0TkdRME1DMWlOemt3TFdZM1ltVmlZVEUyWWpRM1l5SXNJbk4xWWlJNkluTjVjM1JsYlRwelpYSjJhV05sWVdOamIzVnVkRHBrWldaaGRXeDBPbXBsYm10cGJuTWlmUS5Wd25XeUcxYm1YdFdVTkNiYmMtN1F1d0ZkeGhjWEplRklDakhyRzZhbloyUXN4SHhNWHF5ZjlKU29wRkdWLXVDMzZUcnZKUEVDdHdhdy1EYWNIMFBaTUpmbF9VOWViY2ptTF9YbVlIMmpKbk9aWHk4RWFlOC1jeDA3blQtSngyYmpXY2FOTkZJVGNoYU9Jb0pZR256eS1ELVhiaTZxaEJDaEdRNG43aUktWWhHR1ZIYU5XTVVUNzU2TTZRTmtyVmV0RldkY0hyUkVLaVFheEh6MFhoV3laS3VQakl2SWV5VTN2MTBqcU10WUZlYW1VbHVhNUM1b05SdkJod2cwR0VGV082aTkwU1hLRDVUYWhXWmpJVS14eWItS0VGQ25uZ0pvb1YtZF83N1BSMnp6dUVlanJEdzVkc1p1cXpENVMxTXppWkJNdDlDNFJ4UElFcXRjbXNDR0E= | base64 --decode


eyJhbGciOiJSUzI1NiIsImtpZCI6IlRnNGMteXh2cFdGZUhpWGtBcDVzdDlLbWtUdzl5cUM1N1QwQW9KX3FrTUUifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJkZWZhdWx0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6ImplbmtpbnMtc2EtdG9rZW4iLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiamVua2lucyIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjUyMWI4Mzc5LWFmYzUtNGQ0MC1iNzkwLWY3YmViYTE2YjQ3YyIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDpkZWZhdWx0OmplbmtpbnMifQ.VwnWyG1bmXtWUNCbbc-7QuwFdxhcXJeFICjHrG6anZ2QsxHxMXqyf9JSopFGV-uC36TrvJPECtwaw-DacH0PZMJfl_U9ebcjmL_XmYH2jJnOZXy8Eae8-cx07nT-Jx2bjWcaNNFITchaOIoJYGnzy-D-Xbi6qhBChGQ4n7iI-YhGGVHaNWMUT756M6QNkrVetFWdcHrREKiQaxHz0XhWyZKuPjIvIeyU3v10jqMtYFeamUlua5C5oNRvBhwg0GEFWO6i90SXKD5TahWZjIU-xyb-KEFCnngJooV-d_77PR2zzuEejrDw5dsZuqzD5S1MziZBMt9C4RxPIEqtcmsCGA


save the token in a variable
-----------------------------

# jenkins_token=eyJhbGciOiJSUzI1NiIsImtpZCI6IlRnNGMteXh2cFdGZUhpWGtBcDVzdDlLbWtUdzl5cUM1N1QwQW9KX3FrTUUifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJkZWZhdWx0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6ImplbmtpbnMtc2EtdG9rZW4iLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiamVua2lucyIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjUyMWI4Mzc5LWFmYzUtNGQ0MC1iNzkwLWY3YmViYTE2YjQ3YyIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDpkZWZhdWx0OmplbmtpbnMifQ.VwnWyG1bmXtWUNCbbc-7QuwFdxhcXJeFICjHrG6anZ2QsxHxMXqyf9JSopFGV-uC36TrvJPECtwaw-DacH0PZMJfl_U9ebcjmL_XmYH2jJnOZXy8Eae8-cx07nT-Jx2bjWcaNNFITchaOIoJYGnzy-D-Xbi6qhBChGQ4n7iI-YhGGVHaNWMUT756M6QNkrVetFWdcHrREKiQaxHz0XhWyZKuPjIvIeyU3v10jqMtYFeamUlua5C5oNRvBhwg0GEFWO6i90SXKD5TahWZjIU-xyb-KEFCnngJooV-d_77PR2zzuEejrDw5dsZuqzD5S1MziZBMt9C4RxPIEqtcmsCGA


echo $jenkins_token
eyJhbGciOiJSUzI1NiIsImtpZCI6IlRnNGMteXh2cFdGZUhpWGtBcDVzdDlLbWtUdzl5cUM1N1QwQW9KX3FrTUUifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJkZWZhdWx0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6ImplbmtpbnMtc2EtdG9rZW4iLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiamVua2lucyIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjUyMWI4Mzc5LWFmYzUtNGQ0MC1iNzkwLWY3YmViYTE2YjQ3YyIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDpkZWZhdWx0OmplbmtpbnMifQ.VwnWyG1bmXtWUNCbbc-7QuwFdxhcXJeFICjHrG6anZ2QsxHxMXqyf9JSopFGV-uC36TrvJPECtwaw-DacH0PZMJfl_U9ebcjmL_XmYH2jJnOZXy8Eae8-cx07nT-Jx2bjWcaNNFITchaOIoJYGnzy-D-Xbi6qhBChGQ4n7iI-YhGGVHaNWMUT756M6QNkrVetFWdcHrREKiQaxHz0XhWyZKuPjIvIeyU3v10jqMtYFeamUlua5C5oNRvBhwg0GEFWO6i90SXKD5TahWZjIU-xyb-KEFCnngJooV-d_77PR2zzuEejrDw5dsZuqzD5S1MziZBMt9C4RxPIEqtcmsCGA


# kubectl --server https://192.168.0.175:6443 \
	--certificate-authority /etc/kubernetes/pki/ca.crt \
	--token $jenkins_token get pod


Error from server (Forbidden): pods is forbidden: User "system:serviceaccount:default:jenkins" cannot list resource "pods" in API group "" in the namespace "default" 

[This error means its working!!]

# cp dev-tom.conf jenkins.conf

---

cat jenkins.conf 
apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJU2h4SkllQnltTHN3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBek1qZ3dNRE16TWpWYUZ3MHpOVEF6TWpZd01ETTRNalZhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUNuY0Y1MythTnZPYUdNUHVkTzJYRE5QV0FkdEJWY0RKdGovMmJLdjhJZndGZlBDb1BnazREcXAzbGYKa2d0RDFQcFUvUEZmTDFJOTIxVGxWVEdyemdMRFZ4UzZsVkxmbFRDcFVEdTcrb0hhUTZtNzNUS3RuT0JHVDNGQQpJdHNqd25sKzhFUnlsYVdHMFE5KzlaY2RMbnJMenRZai9yVWlTNTRsR3QxcDR0M2RXM28xL3lrUFFTRHpHWS8yCjdEZmMvbmJIdzhUSklRNnF3YWdheUQvTUorUi9LL0VwSzFqWURKMzF2OTdPZkNSUEQ4L25qcm9NVkxtQzE5VnIKeXl5VEFFZ0s5eVYybnlNVVZuQlpKc2VlcDA1Mm9pWUJ3cUt5enptQVhMSzY3TFdNQjlIWXRqL09EWFU0eFIzLwo5SmVCaFU3REZnOFRaVm9OblZaMUUxVWZmZGk3QWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJUNHpPM0tSdE1XbVd0TDk3VUNJaTE3Q3FUVXlUQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ2prWUpTbUdXNQpPRGtWMXF6b0dhQnV6dEFWbndKdEVxWDl2VUJhTkNkNHFKamZGVkV4OG9ObzlFR0RLbXVsZUxNSklsdXE5TzN1CllaUnZXWGgxc0VnZGNYbVAwWkpwMjdoZXlabTc2SGxoenhpZU1RdTkzNWdrQkJiNEphamVubnI5OVVZdTZIWEoKS2ZoOE1vS2wvSi9zblQ1RGR3YW9SSklmLzVnekpLTGdodzNvQmVYQ21TcGlLYklMOGd2VkZUZTgzNm0vWklzcQpXaHd1M05RK2VGbTMvOVBkRzByS3N2MkVBQ1hYdStyZUYxYm1TT3JKQXhCckVORU5UMVd2TXpYM0QyWDZhcUJPCkt4OVZ2cFZyWllpVGZ1eHRwOWNUN0ZoSmdPUkxjaXBxYzlKTHBHbzVqVnNsbDcwaElPZ3lSU3M1WEJnVDFVTmsKbjk0WG1oeVlLd2tKCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    server: https://192.168.0.175:6443
  name: kubernetes
contexts:
- context:
    cluster: kubernetes
    user: jenkins
  name: jenkins@kubernetes
current-context: jenkins@kubernetes
kind: Config
preferences: {}
users:
- name: jenkins
  user:
    token: eyJhbGciOiJSUzI1NiIsImtpZCI6IlRnNGMteXh2cFdGZUhpWGtBcDVzdDlLbWtUdzl5cUM1N1QwQW9KX3FrTUUifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJkZWZhdWx0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6ImplbmtpbnMtc2EtdG9rZW4iLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiamVua2lucyIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjUyMWI4Mzc5LWFmYzUtNGQ0MC1iNzkwLWY3YmViYTE2YjQ3YyIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDpkZWZhdWx0OmplbmtpbnMifQ.VwnWyG1bmXtWUNCbbc-7QuwFdxhcXJeFICjHrG6anZ2QsxHxMXqyf9JSopFGV-uC36TrvJPECtwaw-DacH0PZMJfl_U9ebcjmL_XmYH2jJnOZXy8Eae8-cx07nT-Jx2bjWcaNNFITchaOIoJYGnzy-D-Xbi6qhBChGQ4n7iI-YhGGVHaNWMUT756M6QNkrVetFWdcHrREKiQaxHz0XhWyZKuPjIvIeyU3v10jqMtYFeamUlua5C5oNRvBhwg0GEFWO6i90SXKD5TahWZjIU-xyb-KEFCnngJooV-d_77PR2zzuEejrDw5dsZuqzD5S1MziZBMt9C4RxPIEqtcmsCGA

---



kubectl --kubeconfig jenkins.conf get pod
Error from server (Forbidden): pods is forbidden: User "system:serviceaccount:default:jenkins" cannot list resource "pods" in API group "" in the namespace "default"

Create a Role
-------------

# k create role cicd-role --verb=create,update,list --resource=deployments.apps,services --dry-run=client -o yaml > cicd-role.yaml

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: cicd-role
rules:
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
  - update
  - list
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - update
  - list

---

# k apply -f cicd-role.yaml

# k describe role cicd-role 
Name:         cicd-role
Labels:       <none>
Annotations:  <none>
PolicyRule:
  Resources         Non-Resource URLs  Resource Names  Verbs
  ---------         -----------------  --------------  -----
  services          []                 []              [create update list]        
  deployments.apps  []                 []              [create update list] 

# kubectl create rolebinding cicd-binding --role=cicd-role --serviceaccount=default:jenkins --dry-run=client -o yaml > cicd-binding.yaml

# cat cicd-binding.yaml 

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  creationTimestamp: null
  name: cicd-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cicd-role
subjects:
- kind: ServiceAccount
  name: jenkins
  namespace: default

---

# k apply -f cicd-binding.yaml

# k describe rolebindings.rbac.authorization.k8s.io cicd-binding

Name:         cicd-binding
Labels:       <none>
Annotations:  <none>
Role:
  Kind:  Role
  Name:  cicd-role
Subjects:
  Kind            Name     Namespace
  ----            ----     ---------
  ServiceAccount  jenkins  default

# k auth can-i create service --as system:serviceaccount:default
:jenkins -n default
yes
# k auth can-i create service --as system:serviceaccount:default:jenkins -n dany
no
# k auth can-i create deployment --as system:serviceaccount:defa
ult:jenkins -n default
yes
# k auth can-i get pod --as system:serviceaccount:default:jenkin
s -n default
no

[now we can give dev team jenkins.conf file to work with]