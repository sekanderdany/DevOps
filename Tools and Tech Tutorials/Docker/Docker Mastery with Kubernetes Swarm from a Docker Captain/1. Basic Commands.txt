docker version
docker info
docker
docker container run
docker run
docker container run --publish 80:80 nginx
docker container run --publish 80:80 --detach nginx
docker container ls
docker container stop 690
docker container ls
docker container ls -a
docker container logs webhost
docker container top
docker container top webhost
docker container --help
docker container ls
docker container rm -f 63f
docker container ls -a
docker run --name mongo -d mongo
docker ps 
docker stop mongo
docker ps 
docker top mongo 
docker start mongo
docker container run -d -p 3306:3306 --name db -e \
MYSQL_RANDOM_ROOT_PASSWORD=yes \
MYSQL_RANDOM_ROOT_PASSWORD
docker container logs db
docker container run -d --name webserver -p 8080:8080 httpd
docker ps 
docker container ls 
docker container stop 
docker ps -a
docker container ls -a
docker container rm
docer ps -a
docker image ls
docker container run -d --name nginx nginx
docker container run -d --name mysql -e \
MYSQL_RANDOM_ROOT_PASSWORD=true \
mysql
docker container ls
docker container top nginx
docker container stats --help
docker container ls 
docker container run --help
docker container run -it --name proxy nginx bash
docker container ls -a
docker container run -it --name ubuntu ubuntu
docker container ls
docker container ls -a
docker container start --help
docker container start -ai ubuntu
docker container exec --help
docker container exec -it mysql bash
docker container ls
docker pull alpine
docker imalge ls
docker container run -it alpine bash
docker container run -it alpine sh
docker container run -p 80:80 --name webhost -d nginx
docker container inspect --format '{{ NetworkSettings,IPAddress }}' webhost
docker network ls
docker network inspect bridge
docker network ls
docker network create my_app_net
docker network ls
docker network create --help
docker container run -d --name new_nginx --network my_app_net nginx
docker network inspect my_app_net
docker network --help
docker network connect
docker container inspect
docker container disconnect
docker container inspect
docker container ls
docker network inspect 
docker container run -d --name my_nginx --network my_app_net nginx
docker container inspect 
docker container exec -it my_nginx ping new_nginnx
docker container exec -it new_nginx ping my_nginx
docker network ls
docker container create --help
docker container run --rm -it centos:7 bash
docker ps -a
docker container run --rm -it ubuntu:14.04 bash
docker ps -a
docker network create dude
docker container run -d --net dude --net-alias search elasticsearch:2
docker container ls
docker container run --rm --net dude alpine nslookup search
docker container run --rm --net dude centos curl -s search:9200
docker container ls
docker container rm -f
docker image ls
docker pull nginx 
docker pull nginx:1.11.9
docker pull nginx:1.11
docker pull nginx:1.11.9-alpine
docker image ls 
docker image ls
docker history nginx:latest
docker history mysql
docker image inspect nginx
docker image tag --help
docker image ls
docker pull mysql/mysql-server
docker image ls 
docker pull nginx:mainline
docker image ls
docker image tag nginx bretfisher/nginx
docker image tag --help
docker image ls
docker image push bretfisher/nginx
docker --help
docker login
cat .docker/config.json
docker image push bretfisher/nginx
docker image push bretfisher/nginx bretfisher/nginx:testing
docker image ls
docker image push bretfisher/nginx:testing
docker image ls
cd dockerfile-sample-1
vim Dockerfile
docker image build -t customnginx .
docker image ls
docker image build -t customnginx .
cd dockerfile-sample-2
vim Dockerfile
docker container run -p 80:80 --rm nginx
docker image build -t nginx-with-html .
docker container run -p 80:80 --rm nginx-with-html
docker image ls
docker image tage --help
docker image tag nginx-with-html:latest bretfisher /
nginx-with-html:latest
docker image ls
docker push
cd dockerfile-assignment-1
vim Dockerfile
docker build cmd
docker build -t testnode .
docker container run --rm -p 80:3000 testnode
docker image
docker tag --help
docker tag testnode bretfisher/testing-node
docker push --help
docker push bretfisher/testing-node
docker image ls
docker image rm bretfisher/testing-node
docker container run --rm -p 80:3000 bretfisher/testing-node
docker pull mysql
docker image inspect mysql
docker container run -d --name mysql -e MYSQL_ALLOW_EMPTY_PASSWORD=true mysql
docker container ls
docker container inspect mysql
docker volume ls
docker volume inspect
docker container run -d --name2 mysql -e MYSQL_ALLOW_EMPTY_PASSWORD=True mysql
docker volume ls
docker container stop mysql
docker container stop mysql2
docker container ls
docker container ls -ai
docker volume ls
docker container rm mysql mysql2
docker volume ls
docker container run -d --name mysql -e MYSQL_ALLOW_EMPTY_PASSWORD=True -v mysql-db:/var/lib/mysql mysql
docker volume ls
docker volume inspect mysql-db
docker container rm -f mysql
docker continer run -d --name mysql3 -e MYSQL_ALLOW_EMPTY_PASSWORD=True -v mysql-db:/var/lib/mysql mysql
docker volume ls
docker container inspect mysql3
docker volume create --help
cd dockerfile-sample-2
pcat Dockerfile
docker container run -d --name nginx -p 80:80 -v $(pwd):/usr/share/nginx/html nginx
docker container run -d --name nginx2 -p 80:80 nginx
docker container exec -it nginx bash
docker container run -d --name psql -v psql:/var/lib/postgresql/data postgres:9.6.1
docker container logs -f psql
docker container stop psql
docker container run -d --name psql2 -v psql:/var/lib/postgresql/data postgres:9.6.2
docker container ps -a
docker volume ls
docker container log psql2
docker run -p 80:4000 -v $(pwd):/site bretfisher/jekyll-serve
